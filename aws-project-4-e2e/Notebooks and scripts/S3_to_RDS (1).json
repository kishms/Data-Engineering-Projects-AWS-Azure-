{
	"jobConfig": {
		"name": "S3_to_RDS",
		"description": "",
		"role": "arn:aws:iam::827859361400:role/aws-project-glue-s3-iam",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "S3_to_RDS.py",
		"scriptLocation": "s3://aws-glue-assets-827859361400-ap-south-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-09-21T10:17:15.915Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-827859361400-ap-south-1/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-827859361400-ap-south-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import col\nfrom pyspark.sql.types import TimestampType, DoubleType, IntegerType, BooleanType, StringType\n\n# Initialize Glue context\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\n\n# Start job\njob.init('S3_to_RDS_overwrite', {})\n\n\n# Step 1: Read Parquet from S3\n\nsilver_df = spark.read.parquet(\n    \"s3://aws-project-1-mskish/silver/transactions-topic/part-00000-d691ea86-7333-44af-9737-496669e6bbb3-c000.snappy.parquet\"\n)\n\n# Step 2: Cast columns to correct types\n\nsilver_df = silver_df.withColumn(\"id\", col(\"id\").cast(StringType())) \\\n                     .withColumn(\"client_id\", col(\"client_id\").cast(StringType())) \\\n                     .withColumn(\"card_id\", col(\"card_id\").cast(StringType())) \\\n                     .withColumn(\"amount\", col(\"amount\").cast(DoubleType())) \\\n                     .withColumn(\"date\", col(\"date\").cast(TimestampType())) \\\n                     .withColumn(\"mcc\", col(\"mcc\").cast(StringType())) \\\n                     .withColumn(\"merchant_id\", col(\"merchant_id\").cast(StringType())) \\\n                     .withColumn(\"merchant_city\", col(\"merchant_city\").cast(StringType())) \\\n                     .withColumn(\"merchant_state\", col(\"merchant_state\").cast(StringType())) \\\n                     .withColumn(\"use_chip\", col(\"use_chip\").cast(BooleanType())) \\\n                     .withColumn(\"zip\", col(\"zip\").cast(IntegerType())) \\\n                     .withColumn(\"errors\", col(\"errors\").cast(StringType()))\n\n\n# Step 3: Remove duplicate IDs\n\nsilver_df = silver_df.dropDuplicates([\"id\"])\n\n\n# Step 4: Write DataFrame to RDS PostgreSQL\n\nsilver_df.write \\\n    .format(\"jdbc\") \\\n    .option(\"url\", \"jdbc:postgresql://transactions-db-public.cd6y6esoasle.ap-south-1.rds.amazonaws.com:5432/postgres\") \\\n    .option(\"dbtable\", \"public.transactions\") \\\n    .option(\"user\", \"mskishore\") \\\n    .option(\"password\", \"Thalaacenaa_06\") \\\n    .option(\"driver\", \"org.postgresql.Driver\") \\\n    .mode(\"overwrite\") \\\n    .save()\n\n\n# Step 5: Commit Glue job\n\njob.commit()\n"
}